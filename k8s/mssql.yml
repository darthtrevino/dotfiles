apiVersion: v1
kind: Namespace
metadata:
  name: mssql
  labels:
    name: mssql
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: mssql-disk
provisioner: k8s.io/minikube-hostpath
parameters:
  storageaccounttype: Standard_LRS
  kind: Managed
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mssql-data
  namespace: mssql
  annotations:
    volume.beta.kubernetes.io/storage-class: mssql-disk
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: mssql-secret
  namespace: mssql
type: Opaque
data:
  # paSSw0rd!!@ (development)
  mssql-sa-password: cGFTU3cwcmQhIUA=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql
  namespace: mssql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  template:
    metadata:
      labels:
        app: mssql
    spec:
      terminationGracePeriodSeconds: 10      
      containers:
      - name: mssql
        image: mcr.microsoft.com/mssql/server:2019-latest
        resources: {}
        securityContext:
          privileged: true
        ports:
        - containerPort: 1433
        volumeMounts:
        - name: mssqldb
          mountPath: /var/opt/mssql
        env:
        - name: "MSSQL_PID"
          value: "Developer"
        - name: "ACCEPT_EULA"
          value: "Y"
        - name: "SA_PASSWORD"
          valueFrom: 
            secretKeyRef:
              name: mssql-secret
              key: mssql-sa-password
      volumes:
      - name: mssqldb
        persistentVolumeClaim:
          claimName: mssql-data
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-service
  namespace: mssql
spec:
  selector:
    app: mssql
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 1433
    targetPort: 1433
    nodePort: 30001
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mssql-configmap
  namespace: mssql
data:
  database_url: mssql-service
